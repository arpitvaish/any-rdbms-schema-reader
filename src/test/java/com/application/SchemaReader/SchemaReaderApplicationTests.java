package com.application.SchemaReader;

import com.application.SchemaReader.contant.DBType;
import com.application.SchemaReader.model.DBConnection;
import com.application.SchemaReader.service.SchemaReaderService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.sql.*;

@SpringBootTest
class SchemaReaderApplicationTests {

    @Autowired
    SchemaReaderService schemaReaderService;

    @Test
    void contextLoads() {
    }

    @Test
    void SchemaReaderServicImplTest() throws Exception {
        DBConnection dbConnection = new DBConnection(DBType.valueOf("ORACLE"), "70.48.36.22", "EP92U034", "1521", "SYSADM", "Welcome1");
        //DBConnection dbConnection = new DBConnection(DBType.valueOf("MYSQL"), "localhost", "mysql", "3306", "root", "");
        schemaReaderService.readSchema(dbConnection);
    }

    @Test
    void oracleDbTest() throws SQLException {
        Connection con = null;
        try{
//step1 load the driver class
            Class.forName("oracle.jdbc.driver.OracleDriver");

//step2 create  the connection object
             con= DriverManager.getConnection(
                    "jdbc:oracle:thin:@//70.48.36.22:1521/EP92U034","SYSADM","Welcome1");

//step3 create the statement object
            Statement stmt=con.createStatement();

//step4 execute query
            ResultSet rs=stmt.executeQuery("CREATE TABLE persons(" +
                    "    person_id NUMBER GENERATED BY DEFAULT AS IDENTITY," +
                    "    first_name VARCHAR2(50) NOT NULL," +
                    "    last_name VARCHAR2(50) NOT NULL," +
                    "    PRIMARY KEY(person_id)" +
                    ")");
            // rs=stmt.executeQuery("SELECT DISTINCT OWNER, OBJECT_NAME FROM DBA_OBJECTS WHERE OBJECT_TYPE = 'TABLE'");
           /* while(rs.next())
                System.out.println(rs.getInt(1)+"  "+rs.getString(2)+"  "+rs.getString(3));
*/
//step5 close the connection object
            con.close();

        }catch(Exception e){ e.printStackTrace();}
        finally {
            con.close();
        }

    }

}
